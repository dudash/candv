  {
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "nodejs-datagrid65-example",
    "annotations": {
      "description": "An example Node.js application with a JBoss DataGrid",
      "tags": "instant-app,nodejs,datagrid65",
      "iconClass": "icon-nodejs"
    }
  },
  "labels": {
    "template": "nodejs-datagrid65-example"
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}-nodejs",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${APPLICATION_NAME}-nodejs"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}-nodejs"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${APPLICATION_NAME}-nodejs"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}-nodejs",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}-nodejs",
        "annotations": {
          "description": "Defines how to build the application"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "namespace": "openshift",
              "name": "nodejs:0.10"
            }
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${APPLICATION_NAME}-nodejs:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          },
          {
            "type": "Generic",
            "generic": {
              "secret": "${GENERIC_WEBHOOK_SECRET}"
            }
          }
        ]
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}-nodejs",
        "annotations": {
          "description": "Defines how to deploy the application server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APPLICATION_NAME}-nodejs"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${APPLICATION_NAME}-nodejs:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${APPLICATION_NAME}-nodejs"
        },
        "template": {
          "metadata": {
            "name": "${APPLICATION_NAME}-nodejs",
            "labels": {
              "name": "${APPLICATION_NAME}-nodejs"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${APPLICATION_NAME}-nodejs",
                "image": "${APPLICATION_NAME}-nodejs",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "env": [

                  {
                    "name": "APPLICATION_NAME",
                    "value": "${APPLICATION_NAME}"
                  },
		  {
		    "name": "NODEJS_PORT",
		    "value": "8080"
		  },
                  {
                    "name": "DEFAULT_CACHE",
                    "value": "${DEFAULT_CACHE}"
                  }
                ]
              }
            ]
          }
        }
      }
    },

        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-dg"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-dg",
                "labels": {
                    "application": "${APPLICATION_NAME}-dg"
                },
                "annotations": {
                    "description": "The web server's HTTP port."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}-dg",
                "labels": {
                    "application": "${APPLICATION_NAME}-dg"
                },
                "annotations": {
                    "description": "Route for application's HTTP service."
                }
            },
            "spec": {
                "host": "${DG_HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}-dg"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}-dg",
                "labels": {
                    "application": "${APPLICATION_NAME}-dg"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}-dg"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}",
                                "name": "jboss-datagrid65-openshift:1.2"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-dg"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}-dg",
                            "application": "${APPLICATION_NAME}-dg"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}-dg",
                                "image": "jboss-datagrid65-openshift",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/datagrid/bin/livenessProbe.sh"
                                        ]
                                    }
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/datagrid/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "ports": [
                                    {
                                        "name": "jolokia",
                                        "containerPort": 8778,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "USERNAME",
                                        "value": "${DATAGRID_USER}"
                                    },
                                    {
                                        "name": "PASSWORD",
                                        "value": "${DATAGRID_PASSWORD}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "application=${APPLICATION_NAME}-dg"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INFINISPAN_CONNECTORS",
                                        "value": "${INFINISPAN_CONNECTORS}"
                                    },
                                    {
                                        "name": "CACHE_NAMES",
                                        "value": "${CACHE_NAMES}"
                                    },
                                    {
                                        "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
                                        "value": "${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"
                                    },
                                    {
                                        "name": "MEMCACHED_CACHE",
                                        "value": "${DEFAULT_CACHE}"
                                    },
                                    {
                                        "name": "REST_SECURITY_DOMAIN",
                                        "value": "${REST_SECURITY_DOMAIN}"
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        }

  ],
   "parameters": [
        {
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "value": "demo",
            "required": true
        },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "description": "The URL of the repository with your application source code",
      "value": "https://github.com/wohshon/nodejs-datagrid.git"
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch"
    },
    {
      "name": "CONTEXT_DIR",
      "description": "Set this to the relative path to your project if it is not in the root of your repository"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted. e.g.: <application-name>-<project>.<default-domain-suffix>",
      "value": ""
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "description": "A secret string used to configure the GitHub webhook",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "GENERIC_WEBHOOK_SECRET",
      "description": "A secret string used to configure the Generic webhook",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },



        {
            "description": "Custom hostname for Datagrid http service route.  Leave blank for default hostname, e.g.: <application-name>-<project>.<default-domain-suffix>",
            "name": "DG_HOSTNAME_HTTP",
            "value": "",
            "required": false
        },
        {
            "description": "User name for JDG user. By default not used in this demo",
            "name": "DATAGRID_USER",
            "value": "",
            "required": false
        },
        {
            "description": "Password for JDG user. By default not used in this demo",
            "name": "DATAGRID_PASSWORD",
            "value": "",
            "required": false
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "description": "Comma-separated list of connector types that should be configured (defaults to 'rest')",
            "name": "INFINISPAN_CONNECTORS",
            "value": "rest",
            "required": false
        },
        {
            "description": "Comma-separated list of caches to configure.  By default, a distributed-cache, with a mode of SYNC will be configured for each entry.",
            "name": "CACHE_NAMES",
            "value": "",
            "required": false
        },
        {
            "description": "By default not used in this demo",
            "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
            "value": "",
            "required": false
        },
        {
            "description": "The default cache name",
            "name": "DEFAULT_CACHE",
            "value": "default",
            "required": false
        },
        {
            "description": "The domain, declared in the security subsystem, that should be used to authenticate access to the REST endpoint. By default not used in this demo",
            "name": "REST_SECURITY_DOMAIN",
            "value": "",
            "required": false
        },
        {
            "description": "JGroups cluster password",
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        }
    ]
}